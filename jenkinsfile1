pipeline{

agent any

parameters{

      choice(name: 'action', choices: 'create\ndestroy', description: 'actions to be performed')
      string(name: 'cluster', defaultValue: 'demo-cluster', description: 'aws cluster')
      string(name: 'region', defaultValue: 'us-east-1', description: 'aws region')
}

environment{
    ACCESS_KEY: credentials('Access_key_id')
    SECRET_KEY: credentials('Secret_key_id')
}

stages{

    stage('connect to eks'){

        steps{
          

            sh """
            aws configure Access_key_id "$ACCESS_KEY"
            aws configure Secret_key_id "$SECRET_KEY"
            aws configure Access_key_id ""
            aws eks --region ${params.action} update-kubeconfig --name ${params.cluster}

           """;
          
        }
    }

    stage('deployment using eks'){
        when { expression { params.action == 'create'}}
        steps{
            
            script{
                define apply = false
                try{
                input message: 'are to sure to deploy', ok 'please confirm'
                apply = true
                }
                catch(err){
                 apply = false
                 CurrentBuild.result = 'Unstable'
                }
                if(apply){
                sh """
                      kubectl apply -f .
                      """;
                }

            }
        }
    }

     stage('delete deployments'){

        when { expression { params.action == 'destroy'}}

        steps{

            script{
            define apply = false
            try{
                input message: 'are u sure to destroy', ok 'please confirm'
                apply = true
            }
            catch(err){
                apply = false
                CurrentBuild.result = 'UNSTABLE'
            }
            if(apply){

                sh """
                   kubectl delete -f .

                   """;
            }

            }
        }
     }
}



}